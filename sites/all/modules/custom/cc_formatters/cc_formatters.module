<?php
function cc_formatters_field_formatter_info() {
  return array(
    'image_content_ref' => array(
      'label' => t('Image Content Reference'),
      'description' => t('Output of a field referencing to Image content type node.'),
      'field types' => array('node_reference'),
    ),
    'addressfield_city_only' => array(
      'label' => t('City only'),
      'description' => t('Output just the city, state and country part of an address field as a single line of comma-separated text.'),
      'field types' => array('addressfield'),
    ),
    'using_sharing' => array(
      'label' => t('Using / Sharing'),
      'description' => t('Count interactions'),
      'field types' => array('node_reference', 'addressfield'),
      'settings' => array('count_by' => 'organization', 'filter_by' => array(), 'appearance' => '')
    )
  );
}

function cc_formatters_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  module_load_include('inc', 'cc_formatters', 'cc_formatters');
  if($display['type'] == 'image_content_ref') {
    $galleries = array();
    drupal_add_js(drupal_get_path('module', 'cc_formatters') . '/cc_formatters.js', 'file');
    foreach($items as $delta => $item) {
      $galleries = array_merge($galleries, _cc_formatters_shadowbox_gallery(node_load($item['nid'])));
    }
    return $galleries;
  }
  else if ($display['type'] == 'addressfield_city_only') {
    $e = array();
    foreach($items as $delta => $item) {
      $c = isset($item['sub_administrative_area']) ? $item['sub_administrative_area'] : NULL;
      $item['sub_administrative_area'] = (!empty($c) && empty($item['locality'])) ? t('@county County', array('@county' => $c)) : NULL;
      $r = isset($item['administrative_area']) ? $item['administrative_area'] : NULL;
      $c = isset($item['country']) ? $item['country'] : NULL;
      $item['administrative_area'] = !in_array($c, array('US', 'CA')) ? _cc_awe_region($r, $c) : $r;
      $s = array($item['locality'], $item['sub_administrative_area'], $item['administrative_area'], $item['country']);
      $a = array_filter($s);
      $e[$delta]['#markup'] = implode(', ', $a);
    }
    return $e;
/*    $element = array();
    $includes = array('dependent_locality', 'locality', 'sub_administrative_area', 'administrative_area', 'country');
    foreach ($items as $delta => $item) {
      $pieces = array();
      foreach ($includes as $include) {
        if (!empty($item[$include])) {
          if ($include == 'sub_administrative_area') {
            $pieces[] = t("@county County", array('@county' => $item[$include]));
          }
          else if (
            $include == 'administrative_area'
            && !in_array($item['country'], array('US', 'CA'))
          ) {
            $pieces[] = _cc_awe_region($item[$include], $item['country']);
          }
          else {
            $pieces[] = $item[$include];
          }
        }
      }
      $element[$delta]['#markup'] = implode(', ', $pieces);
      return $element;
    }*/
  }
  else if($display['type'] == 'using_sharing') {
    if($entity_type != 'node') {
      return FALSE;
    }
    if($entity->type != 'organization') {
      return FALSE;
    }
    module_load_include('inc', 'cc_helper', 'cc_helper');
    $count_by = isset($display['settings']['count_by']) ? $display['settings']['count_by'] : FALSE;
    if($count_by == 'organization') {
      $org = $entity;
      $tids = array();
    }
    else if ($count_by == 'city') {
      $tids = isset($display['settings']['filter_by']) ? $display['settings']['filter_by'] : FALSE;
      $org = array();;
      $fn = 'field_organization_address';
      $org['locality'] = _cc_helper_field_first_value($entity_type, $entity, $fn, 'locality');
      $org['country'] = _cc_helper_field_first_value($entity_type, $entity, $fn, 'country');
      $org['administrative_area'] = _cc_helper_field_first_value($entity_type, $entity, $fn, 'administrative_area');
    }
    $ap = isset($display['settings']['appearance']) ? $display['settings']['appearance'] : FALSE;
    $o = _cc_helper_using_sharing($org, $ap, $tids);
    if(!empty($items)) {
      return array(0 => array('#markup' => $o));
    }
  }
}

//Error fix. See http://drupal.org/node/1175838 for details.
function cc_formatters_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $displays) {
  foreach($entities as $id => $entity) {
    if(empty($items[$id])) {
      $items[$id][] = array();
    }
  }
}

function cc_formatters_field_formatter_settings_summary($field, $instance, $view_mode) {
  $disp = $instance['display'][$view_mode];
  if($disp['type'] == 'using_sharing') {
    $opts = array(
      'organization' => t('By organization'),
      'city' => t('By organizations in the same city')
    );
    return t('How to count: "!by".', array('!by' => $opts[$disp['settings']['count_by']]));
  }
}

function cc_formatters_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $r = array();
  $disp = $instance['display'][$view_mode];
  if($disp['type'] == 'using_sharing') {
    $sets = $disp['settings'];
    $class = drupal_html_class($field['field_name'] . '-count-by');
    $r['count_by'] = array(
      '#title' => t('How To Count'),
      '#type' => 'select',
      '#multiple' => FALSE,
      '#default_value' => $sets['count_by'],
      '#attributes' => array('class' => array($class))
    );
    $r['count_by']['#options'] = array(
      'organization' => t('By organization'),
      'city' => t('By organizations in the same city')
    );
    $r['filter_by'] = array(
      '#title' => t('Filter'),
      '#type' => 'select',
      '#description' => t('Count only by organizations of selected types.'),
      '#multiple' => TRUE,
      '#default_value' => $sets['filter_by'],
      '#states' => array('invisible' => array('.' . $class => array('value' => 'organization')))
    );
    $r['appearance'] = array(
      '#title' => t('Appearance'),
      '#type' => 'select',
      '#multiple' => FALSE,
      '#default_value' => $sets['appearance']
    );
    $r['appearance']['#options'] = array(
      '' => t('Default'),
      'full' => t('Full')
    );
    $types = taxonomy_get_tree('13');//13 - "Organization Type" vid.
    $opts = array();
    foreach($types as $type) {
      $opts[$type->tid] = $type->name;
    }
    $r['filter_by']['#options'] = $opts;
  }
  return $r;
}
